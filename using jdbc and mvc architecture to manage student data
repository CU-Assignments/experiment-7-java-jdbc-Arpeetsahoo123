import java.sql.*;
import java.util.*;

class StudentController {
    private Connection connection;

    // Method to connect to the database
    public void connectToDatabase() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/school", "root", "password");
            System.out.println("Connected to the database.");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Create Student
    public void addStudent(Student student) {
        try {
            PreparedStatement ps = connection.prepareStatement("INSERT INTO students (StudentID, Name, Department, Marks) VALUES (?, ?, ?, ?)");
            ps.setInt(1, student.getStudentID());
            ps.setString(2, student.getName());
            ps.setString(3, student.getDepartment());
            ps.setInt(4, student.getMarks());
            ps.executeUpdate();
            System.out.println("Student added successfully.");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // Read Students
    public void displayStudents() {
        try {
            Statement stmt = connection.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM students");
            while (rs.next()) {
                System.out.println(rs.getInt("StudentID") + " | " + rs.getString("Name") + " | " +
                        rs.getString("Department") + " | " + rs.getInt("Marks"));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // Update Student
    public void updateStudentMarks(int studentID, int marks) {
        try {
            PreparedStatement ps = connection.prepareStatement("UPDATE students SET Marks=? WHERE StudentID=?");
            ps.setInt(1, marks);
            ps.setInt(2, studentID);
            ps.executeUpdate();
            System.out.println("Student marks updated.");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // Delete Student
    public void deleteStudent(int studentID) {
        try {
            PreparedStatement ps = connection.prepareStatement("DELETE FROM students WHERE StudentID=?");
            ps.setInt(1, studentID);
            ps.executeUpdate();
            System.out.println("Student deleted.");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}

class Student {
    private int studentID;
    private String name;
    private String department;
    private int marks;

    public Student(int studentID, String name, String department, int marks) {
        this.studentID = studentID;
        this.name = name;
        this.department = department;
        this.marks = marks;
    }

    public int getStudentID() { return studentID; }
    public String getName() { return name; }
    public String getDepartment() { return department; }
    public int getMarks() { return marks; }
}

public class Main {
    public static void main(String[] args) {
        StudentController controller = new StudentController();
        controller.connectToDatabase();  // Connect to DB before operations

        // Adding a student
        Student student1 = new Student(1, "John Doe", "Computer Science", 85);
        controller.addStudent(student1);

        // Displaying students
        controller.displayStudents();

        // Updating student marks
        controller.updateStudentMarks(1, 90);

        // Deleting a student
        controller.deleteStudent(1);
    }
}
